# -*- coding: utf-8 -*-
"""
/***************************************************************************
 FindOSMDataDockWidget
                                 A QGIS plugin
 Find OSM Data
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-09-11
        git sha              : $Format:%H$
        copyright            : (C) 2023 by cuprit gbr
        email                : toni.schoenbuchner@cuprit.net
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt.QtCore import pyqtSignal

from qgis.PyQt.QtWidgets import QWidget, QVBoxLayout
from .config_options_page import ConfigOptionsPage

# FORM_CLASS, _ = uic.loadUiType(os.path.join(
#     os.path.dirname(__file__), 'find_osm_data_dockwidget_base.ui'))


# class FindOSMDataDockWidget(QtWidgets.QDockWidget, FORM_CLASS):

#     closingPlugin = pyqtSignal()

#     def __init__(self, parent=None):
#         """Constructor."""
#         super(FindOSMDataDockWidget, self).__init__(parent)
#         # Set up the user interface from Designer.
#         # After setupUI you can access any designer object by doing
#         # self.<objectname>, and you can use autoconnect slots - see
#         # http://doc.qt.io/qt-5/designer-using-a-ui-file.html
#         # #widgets-and-dialogs-with-auto-connect
#         self.setupUi(self)

#     def closeEvent(self, event):
#         self.closingPlugin.emit()
#         event.accept()

class FindOSMDataDockWidget(QWidget):


    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):
        super().__init__(parent)
        layout = QVBoxLayout()
        self.config_options = ConfigOptionsPage(self)
        layout.addWidget(self.config_options)
        self.setLayout(layout)

    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()